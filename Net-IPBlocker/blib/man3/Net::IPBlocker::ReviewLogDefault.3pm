.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::IPBlocker::ReviewLogDefault 3pm"
.TH Net::IPBlocker::ReviewLogDefault 3pm "2024-02-25" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::IPBlocker::GrepRegexpsDefault \- Default regular expressions for IP blocking
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    This works with the Net::IPBlocker module to provide a default sub for regular expressions for IP blocking.
\&    This is alos a framework that could be used to create other modules that provide default regular expressions for 
\&    IP Blocking of particular types of files such as Apache logs, Postfix logs, Auth logs, etc.
\&
\&    The calling code will always pass in the log object and the log contents.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a default regular expression sub for \s-1IP\s0 blocking. 
These regular expressions can be used with the Net::IPBlocker module to match and block \s-1IP\s0 addresses.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
This is the constructor for the module.  It is not required but is nice to have.
.PP
This sub is called after the module is successfully loaded as a sanity check.
.SS "get_regexps"
.IX Subsection "get_regexps"
Returns an array of default regular expressions for \s-1IP\s0 blocking.
.PP
.Vb 1
\&    my @regexps = Net::IPBlocker::GrepRegexpsDefault\->get_regexps();
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Your Name <your@email.com>
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
